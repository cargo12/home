#!/usr/bin/python
#$Id: padlock  06-22-2011 09:47PM William MacLeod(wimac1@gmail.com) ver: 11.208.1601
# encrypts/decrypts  2 files one for personal docs one for hidden files for Dropbox syncink also mounts a truecrypt volume
# 
# TODO: setup to use config file
#       create a function for hashing password
#
#  now requires encfs folder
import pynotify, os,shutil
from shutil import rmtree
from base64 import b64decode
from sys import exit

pw=b64decode("NDBsZGZhNVQjdHJwdCFyM2RkMGcK").rstrip('\n')
home=os.path.expanduser('~')
icon='/home/wimac/bin/linux5.ico'

# Lock function
def plock():
    #remove lock
    #rmtree('/var/lock/padlock')
    # zip and encrypt with 7z 
    #os.system('7z a -mhe -t7z -p'+ pw +' '+ home +'/Dropbox/personal.enc ' + home + '/home/wimac/personal >/dev/null')
    # unmount encfs directories
    if os.path.isdir('/media/wimac-crypt'):
        os.system('fusermount -u ' + home +'/enc-disk >/dev/null')
        rmtree(home +'/enc-disk')
    if os.path.isdir(home +'/personal'):
        os.system('fusermount -u ' + home +'/personal >/dev/null')
        rmtree(home + '/personal')
    if os.path.isdir( home +'/.p'):
        os.system('7z a -mhe -t7z -p'+ pw +' '+ home +'/Dropbox/dat.enc '+ home +'/.p >/dev/null')
        rmtree(home + '/.p')
    # remove dangling directories
    #rmtree(home + '/personal')
    # remove old symlink
    if os.path.isdir(home+'/lpriv'):
        print 'lpriv exists'
        os.remove(home + '/lpriv')
    
    # kill truecrypt and unmout any drives
    if os.path.isdir('/dev/mapper/truecrypt1'): 
        os.system('fuser -kms /dev/mapper/truecrypt1')
    os.system('truecrypt -t -d --force &')
    
    print '--[ click ]--'
    #n = pynotify.Notification("Padlock", '---[ click ]---', icon)
    #n.show()
    

# Unlock function 
def ulock():
    if os.path.isfile('/home/wimac/data.p'):
        os.system('truecrypt -t -k "" -p' + pw +' --protect-hidden=no --mount /home/wimac/data.p '+ home + '/priv/ &')
        print '--[ unlocked removable ]--'
        #nr = pynotify.Notification("Padlock", '---[ unlock removable ]---', icon)
        #nr.show()
    if os.path.isdir('/media/wimac-crypt'):
        os.mkdir(home +'/enc-disk')
        os.system('echo '+ pw  +' | encfs -S /media/wimac-crypt ' + home + '/enc-disk')
    os.mkdir(home +'/personal')
    os.system('echo '+ pw  +' | encfs -S ' + home + '/Dropbox/.crypt-data ' + home + '/personal')
    os.system('7z x -p' + pw +' '+ home +'/Dropbox/dat.enc -o'+ home +' >/dev/null&')
    
    # Notification
    print "--[ unlocked local ]--"
    #nl = pynotify.Notification("Padlock", '---[ unlock local ]---', icon)
    #nl.show()
    
# Command line handler
from sys import argv

if argv[1]=='-u':
    # check if already unlocked
    #try:
    #    os.mkdir('/var/lock/padlock')
    
    #except OSError, err:
    #    print 'ERROR: already unlocked'
    #    nl = pynotify.Notification("Padlock ERROR:", '---[ already unlocked ]---', icon)
    #    nl.show()
    #    exit()
    ulock()
elif argv[1]=='-l':
    plock()

